group 'io.github.eimapi'
version '0.0.1'

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: "jacoco"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.5'
}

//create native2ascii task
import org.apache.tools.ant.filters.EscapeUnicode

tasks.withType(ProcessResources).each { task ->
    task.from(task.getSource()) {
        include '**/*.properties'
        filter(EscapeUnicode)
    }
}

//coverage with jacoco
jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination "${buildDir}/reports/jacoco/html"
    }
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

/*
signing {
    sign configurations.archives
}
*/


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.env.USERNAME ?: ossrhUsername, password: System.env.PASSWORD ?: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.env.USERNAME ?: ossrhUsername, password: System.env.PASSWORD ?: ossrhPassword)
            }

            pom.project {
                name 'content-store-api'
                packaging 'jar'
                description 'This is an generic API to work with content store in the EIMAPI project'
                url 'https://eimapi.github.io/content-store-api/'

                scm {
                    connection 'scm:git:git@github.com:eimapi/content-store-api.git'
                    developerConnection 'scm:git:git@github.com:eimapi/content-store-api.git'
                    url 'git@github.com:eimapi/content-store-api.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'gsdenys'
                        name 'Denys G. Santos'
                        email 'gsdenys@gmail.com'
                    }
                }
            }
        }
    }
}